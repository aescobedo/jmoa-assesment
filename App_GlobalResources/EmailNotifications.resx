<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlmostDone" xml:space="preserve">
    <value>Almost done!</value>
    <comment>label</comment>
  </data>
  <data name="AreReceivingEmail" xml:space="preserve">
    <value>You are receiving email notifications at</value>
    <comment>label</comment>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure you want your email notifications sent to '{0}' instead of '{1}'?</value>
    <comment>javascript confirmation message</comment>
  </data>
  <data name="ContinueToReceive" xml:space="preserve">
    <value>You will continue to receive email notifications from Exigo at '{0}' until you confirm your new email address.</value>
    <comment>label</comment>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
    <comment>label</comment>
  </data>
  <data name="EmailBody" xml:space="preserve">
    <value>&lt;p&gt;
            {1} has received a request to enable this email account to receive email notifications from {1} and your upline.
        &lt;/p&gt;

        &lt;p&gt; 
            To confirm this email account, please click the following link:&lt;br /&gt;
            &lt;a href='{0}'&gt;{0}&lt;/a&gt;
        &lt;/p&gt;

        &lt;p&gt;
            If you did not request email notifications from {1}, or believe you have received this email in error, please contact {1} customer service.
        &lt;/p&gt;

        &lt;p&gt;
            Sincerely, &lt;br /&gt;
            {1} Customer Service
        &lt;/p&gt;</value>
    <comment>email message</comment>
  </data>
  <data name="EmailNotificationsHeader" xml:space="preserve">
    <value>Email Notifications</value>
    <comment>header</comment>
  </data>
  <data name="EmailSubject" xml:space="preserve">
    <value>Email Notifications Confirmation</value>
    <comment>email message</comment>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>My Account</value>
    <comment>header</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
    <comment>javascript confirmation message</comment>
  </data>
  <data name="NotReceivingEmail" xml:space="preserve">
    <value>You are not receiving email notifications.</value>
    <comment>label</comment>
  </data>
  <data name="NotValidEmail" xml:space="preserve">
    <value>The email address you entered does not appear to be a valid email address. Please check your spelling and try again.</value>
    <comment>validation message</comment>
  </data>
  <data name="PleaseEnterEmail" xml:space="preserve">
    <value>Please enter the email address you want to receive email notifications with.</value>
    <comment>validation message</comment>
  </data>
  <data name="SendVerificationEmail" xml:space="preserve">
    <value>Send Verification Email</value>
    <comment>label</comment>
  </data>
  <data name="SubscribeInstructions" xml:space="preserve">
    <value>To subscribe to company emails, click the "Subscribe" button below. An email will be sent to the email address on your account to verify your email address.</value>
    <comment>label</comment>
  </data>
  <data name="ThankYouPleaseCheckEmail" xml:space="preserve">
    <value>Thank you! Please check your email inbox, and click the link found in the confirmation email.</value>
    <comment>label</comment>
  </data>
  <data name="Unsubscribe" xml:space="preserve">
    <value>Unsubscribe</value>
    <comment>label</comment>
  </data>
  <data name="WillNotReceive" xml:space="preserve">
    <value>You will not receive email notifications from Exigo until you confirm your address.</value>
    <comment>label</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>javascript confirmation message</comment>
  </data>
  <data name="YouAreAlreadySubscribed" xml:space="preserve">
    <value>You are already subscribed to email notifications with this email address.</value>
    <comment>javascript message</comment>
  </data>
</root>